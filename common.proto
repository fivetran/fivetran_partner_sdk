syntax = "proto3";
option optimize_for = SPEED;
option java_multiple_files = true;
option go_package = "fivetran.com/fivetran_sdk";
package fivetran_sdk.v2;

import "google/protobuf/timestamp.proto";

message ConfigurationFormRequest {}

message ConfigurationFormResponse {
  bool schema_selection_supported = 1;
  bool table_selection_supported = 2;
  repeated FormField fields = 3;
  repeated ConfigurationTest tests = 4;
}

message FormField {
  oneof field {
      Field single = 1;
      FieldSet field_set = 2;
  }
}

message Field {
  string name = 1;
  string label = 2;
  bool required = 3;
  optional string description = 4;
  optional string default_value = 5;
  optional string placeholder = 6;
  oneof type {
    TextField text_field = 7;
    DropdownField dropdown_field = 8;
    ToggleField toggle_field = 9;
  }
}

message FieldSet {
  repeated FormField fields = 1;
  optional VisibilityCondition condition = 2;
}

message VisibilityCondition {
  string field_name = 1;
  oneof condition {
    bool has_bool_value = 2;
    string has_string_value = 3;
  }
}

message DropdownField {
  repeated string dropdown_field = 1;
}

message ToggleField {}

enum TextField {
  PlainText = 0;
  Password = 1;
  Hidden = 2;
}

message ConfigurationTest {
  string name = 1;            // unique identifier for the test
  string label = 2;           // A few words indicating what we are testing, e.g. 'Connecting to database'
}

message TestRequest {
  string name = 1;
  map<string, string> configuration = 2;
}

message TestResponse {
  oneof response {
    bool success = 1;
    string failure = 2;
    // potential future warning
  }
}

message SchemaList {
  repeated Schema schemas = 1;
}

message TableList {
  repeated Table tables = 1;
}

message Schema {
  string name = 1;
  repeated Table tables = 2;
}

enum DataType {
  UNSPECIFIED = 0;
  BOOLEAN = 1;
  SHORT = 2;
  INT = 3;
  LONG = 4;
  DECIMAL = 5;
  FLOAT = 6;
  DOUBLE = 7;
  NAIVE_TIME = 8;
  NAIVE_DATE = 9;
  NAIVE_DATETIME = 10;
  UTC_DATETIME = 11;
  BINARY = 12;
  XML = 13;
  STRING = 14;
  JSON = 15;
}

message DecimalParams {
  uint32 precision = 1;
  uint32 scale = 2;
}

enum RecordType {
  UPSERT = 0;
  UPDATE = 1;
  DELETE = 2;
  TRUNCATE = 3;
}

message ValueType {
  oneof inner {
    bool null = 1;
    bool bool = 2;
    int32 short = 3;
    int32 int = 4;
    int64 long = 5;
    float float = 6;
    double double = 7;
    google.protobuf.Timestamp naive_time = 8;
    google.protobuf.Timestamp naive_date = 9;
    google.protobuf.Timestamp naive_datetime = 10;
    google.protobuf.Timestamp utc_datetime = 11;
    string decimal = 12;
    bytes binary = 13;
    string string = 14;
    string json = 15;
    string xml = 16;
  }
}

message Table {
  string name = 1;
  repeated Column columns = 2;
}

message Column {
  string name = 1;
  DataType type = 2;
  bool primary_key = 3;
  optional DecimalParams decimal = 4;
}
