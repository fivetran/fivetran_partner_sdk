syntax = "proto3";
option optimize_for = SPEED;
option java_multiple_files = true;
option go_package = "fivetran.com/fivetran_sdk_v2";
package fivetran_sdk.v2;

import "google/protobuf/timestamp.proto";
import "common_v2.proto";

// Fivetran (grpc client) <> DestinationConnector (grpc server)
service DestinationConnector {
    rpc ConfigurationForm (ConfigurationFormRequest) returns (ConfigurationFormResponse) {}
    rpc Capabilities (CapabilitiesRequest) returns (CapabilitiesResponse) {}
    rpc Test (TestRequest) returns (TestResponse) {}
    rpc DescribeTable (DescribeTableRequest) returns (DescribeTableResponse) {}
    rpc CreateTable(CreateTableRequest) returns (CreateTableResponse) {}
    rpc AlterTable(AlterTableRequest) returns (AlterTableResponse) {}
    rpc Truncate(TruncateRequest) returns (TruncateResponse) {}
    rpc WriteBatch (WriteBatchRequest) returns (WriteBatchResponse) {}
}

message CapabilitiesRequest {}

message CapabilitiesResponse {
    repeated DataTypeMappingEntry data_type_mappings = 1;
    bool supports_history_mode = 2;
    BatchFileFormat batch_file_format = 3;
}

message DataTypeMappingEntry {
    DataType fivetran_type = 1;
    oneof destination_type {
        DestinationType map_to = 2;
        bool unsupported = 3;
    }
}

message DestinationType {
    string name = 1;
    oneof mapping {
        bool keep_same = 2;
        DataType map_to = 3;
    }
    optional MaxValue max_value = 4;
}

message MaxValue {
    oneof max_param {
        int32 numeric_param = 1;
        DecimalParams decimal_param = 2;
        google.protobuf.Timestamp date_param = 3;
    }
}

message DescribeTableRequest {
    map<string, string> configuration = 1;
    string schema_name = 2;
    string table_name = 3;
}

message DescribeTableResponse {
    oneof response {
        bool not_found = 1;
        string failure = 2;
        Table table = 3;
    }
}

message CreateTableRequest {
    map<string, string> configuration = 1;
    string schema_name = 2;
    Table table = 3;
}

message CreateTableResponse {
    oneof response {
        bool success = 1;
        string failure = 2;
    }
}

message AlterTableRequest {
    map<string, string> configuration = 1;
    string schema_name = 2;
    string table_name = 3;
    repeated SchemaDiff changes = 4;
}

message SchemaDiff {
    oneof change {
        Column add_column = 1;
        ChangeType change_column_type = 2;
        PrimaryKey update_primary_keys = 3;
    }
}

message PrimaryKey {
    repeated string column_name = 1;
}

message ChangeType {
    string column_name = 1;
    DataType new_type = 2;
    optional DataTypeParams params = 3;
}

message AlterTableResponse {
    oneof response {
        bool success = 1;
        string failure = 2;
    }
}

message TruncateRequest {
    map<string, string> configuration = 1;
    string schema_name = 2;
    string table_name = 3;
    string synced_column = 4;
    google.protobuf.Timestamp utc_delete_before = 5;
    optional SoftTruncate soft = 6;
}

message SoftTruncate {
    oneof soft_truncate {
        string deleted_column = 1;
        bool history_mode = 2;
    }
}

message TruncateResponse {
    oneof response {
        bool success = 1;
        string failure = 2;
    }
}

message WriteBatchRequest {
    map<string, string> configuration = 1;
    string schema_name = 2;
    Table table = 3;
    bool history_mode = 4;
    map<string, bytes> keys = 5;
    repeated string replace_files = 6;
    repeated string update_files = 7;
    repeated string delete_files = 8;
    FileParams file_params = 9;
}

message FileParams {
    Compression compression = 1;
    Encryption encryption = 2;
    string null_string = 3;
    string unmodified_string = 4;
}

enum Encryption {
    NONE = 0;
    AES = 1;
}

enum BatchFileFormat {
    CSV = 0;
    PARQUET = 1;
}

enum Compression {
    OFF = 0;
    ZSTD = 1;
    GZIP = 2;
}

message WriteBatchResponse {
    oneof response {
        bool success = 1;
        string failure = 2;
    }
}
